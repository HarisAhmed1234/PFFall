# HarisAhmed
# Q1;
#include <stdio.h>

int main() {
int n; 
printf("Enter the positive value of n: ");

scanf("%d", &n);

int line = 0;
int j;
while (line<=n){
int j=1;      
while (j<=line){
           printf("* ");
       j=j+1;
    }
  printf("\n");
  line=line+1;
}
return 1;
}//end main

# Q2
#include <stdio.h>

int main() {
int n; 
printf("Enter the positive value of n: ");

scanf("%d", &n);

int line = 1;
int j;
while (line<=n){
int j=1;      
while (j<=n){
           printf("* ");
       j=j+1;
    } //end while j<=n
  printf("\n");
  line=line+1;
}
return 1;
}//end main

# Q3
#include <stdio.h>

int main() {
    int number_of_integers, count = 0, input_value, sum_of_squares = 0;
	printf("Enter the number of inputs: ");
    scanf("%d", &number_of_integers);

    while (count < number_of_integers) { 
        printf("Enter integer %d: ", count + 1);
        scanf("%d", &input_value);
        sum_of_squares = sum_of_squares + (input_value * input_value);
        count=count + 1;
    }
    printf("The sum of the squares is: %d\n", sum_of_squares);

    return 0;
}

# Q5
#include <stdio.h>

int main() {
    int d1, m1, y1;
    int d2, m2, y2;

    printf("Enter the date of birth for person 1 (dd mm yyyy): ");
    scanf("%d %d %d", &d1, &m1, &y1);

    printf("Enter the date of birth for person 2 (dd mm yyyy): ");
    scanf("%d %d %d", &d2, &m2, &y2);

    if (y1 < y2 || (y1 == y2 && m1 < m2) || (y1 == y2 && m1 == m2 && d1 < d2)) {
        printf("Person 1 is older.\n");
    } else if (y1 > y2 || (y1 == y2 && m1 > m2) || (y1 == y2 && m1 == m2 && d1 > d2)) {
        printf("Person 2 is older.\n");
    } else {
        printf("Both persons are of the same age.\n");
    }

    return 0;
}

# Q4
#include <stdio.h>
#include <math.h>
int main() {
    float a, b, c;
    float discriminant, root1, root2;
	printf("Enter the coeffients of a b c (a, b, c): ");
    scanf("%f %f %f", &a, &b, &c);
	discriminant = b * b - 4 * a * c;
    if (discriminant > 0) {
        root1 = (-b + sqrtf(discriminant)) / (2 * a);
        root2 = (-b - sqrtf(discriminant)) / (2 * a);
        printf("The roots are real and distinct:\n");
        printf("Root 1 = %.2f\n", root1);
        printf("Root 2 = %.2f\n", root2);
    } else if (discriminant == 0) {
    	root1 = -b / (2 * a);
        printf("The root is real and repeated:\n");
        printf("Root 1 = %.2f\n", root1);
    } else {
        float realPart = -b / (2 * a);
        float imaginaryPart = sqrtf(-discriminant) / (2 * a);
        printf("The roots are complex:\n");
        printf("Root 1 = %.2f + %.2fi\n", realPart, imaginaryPart);
        printf("Root 2 = %.2f - %.2fi\n", realPart, imaginaryPart);
    }

    return 0;
}

	
